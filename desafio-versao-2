import textwrap

menu = """\n
    ================ MENU ================
    [d] Depositar
    [s] Sacar
    [e] Extrato
    [nc] Nova conta
    [lc] Listar contas
    [nu] Novo usuário
    [0] Sair
=> """

def deposito(saldo, valor_deposito, extrato, /):
    if valor_deposito >= 0:
        saldo += valor_deposito
        extrato += f"Depósito: R$ {valor_deposito:.2f}\n"
    else:
        print("Operação falhou! O valor_deposito informado é inválido.")
    return saldo, extrato

def sacar(*, saldo, valor_saque, extrato, limite, numero_saques, limite_saques):
    excedeu_limite = valor_saque > limite
    excedeu_saldo = valor_saque > saldo
    excedeu_saques = numero_saques >= limite_saques

    if excedeu_limite:
        print("Operação falhou! Você ultrapassou seu limite por saques.")
        
    elif excedeu_saldo:
        print("Operação falhou! Você não tem saldo suficiente.")

    elif excedeu_saques:
        print("Operação falhou! Você excedeu seu número de saques por dia")

    elif valor_saque > 0:
        saldo -= valor_saque
        extrato += f"Saque: R$ {valor_saque:.2f}\n"
        numero_saques+=1
        print("\n== Saque realizado com sucesso! ==")

    else:
        print("Operação falhou! O valor_deposito informado é inválido.")
    
    return saldo, extrato

def exibir_extrato(saldo, /, *, extrato):
    print()
    print("\n================ EXTRATO ================")
    print("Não foram realizadas movimentações." if not extrato else extrato)
    print(f"\nSaldo: R$ {saldo:.2f}")
    print("==========================================")  

def cadastrar_cliente(usuarios):
    cpf = input("Informe o CPF (somente número): ")
    usuario = filtrar_cliente(cpf, usuarios)

    if usuario:
        print("\n=== Já existe um usuário com esse CPF! ===")
        return

    nome = input("Informe o nome completo do cliente: ")
    data_nascimento = input("Informe a data de nascimento( dd-mm-aaaa): ")
    endereco = input("Informe o endereço (logradouro, Nº, bairro, cidade/sigla estado): ")

    usuarios.append({"nome": nome, "data_nascimento": data_nascimento, "cpf":cpf, "endereco":endereco})

    print("=== Usuário criado com sucesso! ===")

def filtrar_cliente(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None

def cadastrar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF do cliente: ")
    usuario = filtrar_cliente(cpf, usuarios)

    if usuario:
        print("\n=== Conta criada com sucesso! ===")
        return {"agencia":agencia, "numero_conta":numero_conta, "usuario":usuario}
    
    print("\n=== Usuário não encontrado, fluxo de criação de conta encerrado! ===")

def listar_contas(contas):
    for conta in contas:
        linha = f"""\
            Agência:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta']}
            Titular:\t{conta['usuario']['nome']}
        """
        print("=" * 100)
        print(textwrap.dedent(linha))
    return

def main():
    LIMITE_SAQUES = 3
    AGENCIA = "0001"

    saldo = 0
    limite = 500
    extrato = ""
    numero_saques = 0
    usuarios = []
    contas = []

    while True:

        opcao = input(menu)

        if opcao == "d":
            print("Opção escolhida: Depósito")
            valor_deposito = float(input("Digite a quantidade que deseja depositar:"))
            saldo, extrato = deposito(saldo, valor_deposito, extrato)

        elif opcao == "s":
            print("Opção escolhida: Saque")
            valor_saque = float(input("Digite o valor_deposito que você deseja sacar: "))
            
            saldo, extrato = sacar(
                saldo=saldo,
                valor_saque=valor_saque,
                extrato=extrato,
                limite=limite,
                numero_saques=numero_saques,
                limite_saques=LIMITE_SAQUES)

        elif opcao == "e":
            print("Opção escolhida: Extrato")
            exibir_extrato(saldo, extrato=extrato)

        elif opcao == "nu":
            cadastrar_cliente(usuarios)

        elif opcao == "nc":
            numero_conta = len(contas) + 1
            conta = cadastrar_conta(AGENCIA, numero_conta, usuarios)

            if conta:
                contas.append(conta)

        elif opcao == "lc":
            listar_contas(contas)

        elif opcao == "0":
            break

        else:
            print("Operação inválida, por favor selecione novamente a operação desejada.")

main()
